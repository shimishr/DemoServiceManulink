{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/product/product.component.css","webpack:///./src/app/product/product.component.html","webpack:///./src/app/product/product.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"h1 {\\r\\n  color: blue;\\r\\n  font-size: 150%;\\r\\n}\"","module.exports = \"<div style=\\\"text-align: center;\\\">\\n<h1>{{title}}</h1>\\n</div>\\n\\n<div>\\n    <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'JavasampleApproach HelloWord Angular4 App';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProductComponent } from './product/product.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    ProductComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule, \n    RouterModule.forRoot([\n      {path: \"\", component: HomeComponent},\n      {path: \"product\", component: ProductComponent}\n  ])\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<a routerLink = '/product'>+ Add Product</a>\\n\\n<h1>\\n  Products\\n</h1>\\n\\n<table>\\n  <th>ID</th>\\n  <th>Name</th>\\n  <th>Username</th>\\n  <tr *ngFor = \\\"let product of products\\\">\\n    <td>{{product.id}}</td>\\n    <td>{{product.name}}</td>\\n    <td>{{product.username}}</td>\\n  </tr>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport {Http, Response, Headers} from '@angular/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private http:Http) { }\n\n  products = [];\n  \n  fetchData = function() {\n    this.http.get(\"http://jsonplaceholder.typicode.com/users\").subscribe(\n      (res: Response) => {\n        this.products = res.json();\n        console.log(res);\n      }\n    )\n  }\n\n  ngOnInit()  {\n   this.fetchData();\n }\n\n}\n","module.exports = \"\"","module.exports = \"<a routerLin = \\\"/\\\">> back</a>\\n<h2>\\nAdd New Product\\n</h2>\\n\\n<form id = \\\"formNewProduct\\\" name=\\\"formNewProduct\\\" #productData = \\\"ngForm\\\" (ngSubmit) = \\\"addNewProduct(productData.value)\\\">\\n  <label>Name:</label>\\n  <input type=\\\"text\\\" name=\\\"name\\\" id=\\\"name\\\" placeholder=\\\"name\\\" ngModel><br>\\n  <label>UserName:</label>\\n  <input type=\\\"text\\\" name=\\\"username\\\" id=\\\"username\\\" placeholder=\\\"username\\\" ngModel><br>\\n  <input type=\\\"submit\\\" value=\\\"Add Product\\\">\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { Http,Response,Headers} from '@angular/http';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n\n  constructor(private http: Http) { }\n  productObj:object = {};\n\n  addNewProduct = function(product) {\n    this.productObj = {\n      \"name\": product.name,\n      \"username\": product.username\n    }\n    this.http.post(\"http://jsonplaceholder.typicode.com/users/\",this.productObj).subscribe((res:Response) => {\n      console.log(res);\n      \n    })\n  }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}